import{_ as e,c as t,o as l,ai as r}from"./chunks/framework.6W0t2oXd.js";const d=JSON.parse('{"title":"3. Pensament computacional","description":"","frontmatter":{},"headers":[],"relativePath":"3-pensament-computacional.md","filePath":"3-pensament-computacional.md"}'),i={name:"3-pensament-computacional.md"};function o(s,a,n,c,p,u){return l(),t("div",null,a[0]||(a[0]=[r('<h1 id="_3-pensament-computacional" tabindex="-1">3. Pensament computacional <a class="header-anchor" href="#_3-pensament-computacional" aria-label="Permalink to &quot;3. Pensament computacional&quot;">​</a></h1><p>El <strong>pensament computacional</strong> és una manera de resoldre problemes que utilitza conceptes i mètodes de la informàtica. És una habilitat fonamental que no només s&#39;aplica a la programació, sinó que també ens ajuda en la vida quotidiana.</p><h2 id="_3-1-els-quatre-pilars-del-pensament-computacional" tabindex="-1">3.1. Els quatre pilars del pensament computacional <a class="header-anchor" href="#_3-1-els-quatre-pilars-del-pensament-computacional" aria-label="Permalink to &quot;3.1. Els quatre pilars del pensament computacional&quot;">​</a></h2><h3 id="_1-descomposicio" tabindex="-1"><strong>1. Descomposició</strong> <a class="header-anchor" href="#_1-descomposicio" aria-label="Permalink to &quot;**1. Descomposició**&quot;">​</a></h3><p>Dividir un problema complex en parts més xicotetes i manejables.</p><blockquote><p><em><strong>Exemple: Organitzar una festa</strong></em></p><p>En lloc de pensar &quot;he d&#39;organitzar una festa&quot; (problema complex), ho dividim:</p><ul><li>Decidir data i lloc</li><li>Fer llista d&#39;invitats</li><li>Comprar menjar i begudes</li><li>Preparar música</li><li>Decorar l&#39;espai</li><li>Netejar després</li></ul></blockquote><h3 id="_2-reconeixement-de-patrons" tabindex="-1"><strong>2. Reconeixement de patrons</strong> <a class="header-anchor" href="#_2-reconeixement-de-patrons" aria-label="Permalink to &quot;**2. Reconeixement de patrons**&quot;">​</a></h3><p>Identificar similituds entre problemes per reutilitzar solucions.</p><blockquote><p><em><strong>Exemple: Recepta de cuina</strong></em></p><p>Si saps fer una truita de patates, pots aplicar el mateix patró per fer altres truites:</p><ul><li>Batre ous ✓</li><li>Preparar ingredient principal (patates/carbassó/ceba...)</li><li>Mesclar amb ous ✓</li><li>Cuinar a la paella ✓</li></ul><p>El patró és el mateix, només canvia l&#39;ingredient.</p></blockquote><h3 id="_3-abstraccio" tabindex="-1"><strong>3. Abstracció</strong> <a class="header-anchor" href="#_3-abstraccio" aria-label="Permalink to &quot;**3. Abstracció**&quot;">​</a></h3><p>Centrar-se en els aspectes importants i ignorar els detalls irrellevants.</p><blockquote><p><em><strong>Exemple: Mapa del metro</strong></em></p><p>Un mapa del metro no mostra:</p><ul><li>La forma real dels túnels</li><li>Els edificis del damunt</li><li>Les distàncies reals</li></ul><p>Només mostra el que importa: línies, estacions i connexions.</p></blockquote><h3 id="_4-algoritme" tabindex="-1"><strong>4. Algoritme</strong> <a class="header-anchor" href="#_4-algoritme" aria-label="Permalink to &quot;**4. Algoritme**&quot;">​</a></h3><p>Quan parlem d&#39;un <strong>algoritme</strong>, ens referim a una sèrie de passos ordenats que ens permeten resoldre un problema. És com una recepta de cuina, però per a solucionar problemes amb l&#39;ordinador.</p><h4 id="_4-1-aplicacions-en-la-vida-quotidiana" tabindex="-1">4.1. Aplicacions en la vida quotidiana <a class="header-anchor" href="#_4-1-aplicacions-en-la-vida-quotidiana" aria-label="Permalink to &quot;4.1. Aplicacions en la vida quotidiana&quot;">​</a></h4><p>El pensament computacional no és només per a programadors:</p><ul><li><strong>Cuina</strong>: Planificar un menú (descomposició), usar receptes similars (patrons)</li><li><strong>Estudis</strong>: Dividir temari en blocs (descomposició), fer resums (abstracció)</li><li><strong>Treball</strong>: Automatitzar tasques repetitives (Algoritmes), veure similituds entre projectes (patrons)</li><li><strong>Viatges</strong>: Planificar ruta (Algoritme), comparar opcions de transport (abstracció)</li></ul><h2 id="_3-2-del-pensament-computacional-a-la-programacio" tabindex="-1">3.2. Del pensament computacional a la programació <a class="header-anchor" href="#_3-2-del-pensament-computacional-a-la-programacio" aria-label="Permalink to &quot;3.2. Del pensament computacional a la programació&quot;">​</a></h2><p>Quan programem, utilitzem aquests mateixos conceptes:</p><table tabindex="0"><thead><tr><th>Pensament Computacional</th><th>En Programació</th></tr></thead><tbody><tr><td><strong>Descomposició</strong></td><td>Dividir el programa en funcions/mòduls</td></tr><tr><td><strong>Patrons</strong></td><td>Reutilitzar codi, usar plantilles</td></tr><tr><td><strong>Abstracció</strong></td><td>Crear funcions que amaguen complexitat</td></tr><tr><td><strong>Algoritme</strong></td><td>Escriure instruccions pas a pas</td></tr></tbody></table><p>Per a que un algoritme siga realment útil, ha de complir amb certes característiques:</p><ol><li><strong>Té un nombre finit de passos</strong>: No pot ser una llista interminable d&#39;instruccions.</li><li><strong>Sempre acaba en algun moment</strong>: Si no tinguera fi, no estaríem resolent res.</li><li><strong>Cada pas està definit amb claredat</strong>: No pot haver-hi instruccions ambigües o confuses.</li><li><strong>Pot treballar amb diferents dades d&#39;entrada</strong>: Com quan usem la mateixa recepta però canviem les quantitats dels ingredients.</li><li><strong>Produeix almenys un resultat</strong>: Al final, ha de donar-nos la solució que busquem.</li></ol><p>Un exemple comú per a il·lustrar un algoritme és una recepta de cuina, com muntar un moble o com preparar una tassa de café. Si ens centrem en aquest últim, s&#39;ha de detallar els passos necessaris per a transformar els ingredients i utensilis (dades d&#39;entrada) en una tassa de café (dada d&#39;eixida), amb instruccions clares i un temps de preparació finit.</p><blockquote><p><em><strong>Exemple: Com preparar una tassa de café</strong></em></p><ul><li><strong>Descomposició</strong>: <ul><li>Buscar el café mòlt</li><li>Col·locar aigua en la cafetera</li><li>Afegir el café mòlt en el filtre &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</li><li>Encenar la cafetera</li><li>Esperar que l&#39;aigua calenta passe pel café mòlt =======</li><li>Encendre la cafetera &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</li><li>Esperar que l&#39;aigua calenta passe pel café mòlt =======</li><li>Esperar que l’aigua calenta passe pel café mòlt</li></ul></li></ul><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>cc1fef8bd671b792ac8a3f09f6188646e24f3374 a4c262c3d56e24ab9706213840acbdc4ed30acf5 =======</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><ul><li>Esperar que l’aigua calenta passe pel café mòlt</li></ul><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>cc1fef8bd671b792ac8a3f09f6188646e24f3374 44567bcf6c8a93f267c2110d80b019b5d3beda92</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><ul><li><p>Abocar el café en una tassa</p></li><li><p><strong>Patrons</strong>:</p><ul><li>Sempre buscar els ingredients → preparar → servir</li></ul></li><li><p><strong>Abstracció</strong>:</p><ul><li>L&#39;usuari no necessita saber com funciona la cafetera internament</li></ul></li><li><p><strong>Algoritme</strong>:</p></li><li><p><strong>Dades d&#39;entrada</strong>: Café mòlt, aigua, cafetera, tassa.</p></li><li><p><strong>Dada d&#39;eixida</strong>: Tassa de café. <strong>Procediment</strong>:</p></li></ul><ol><li>Buscar els ingredients necessaris (café mòlt, aigua).</li><li>Col·locar aigua en la cafetera.</li><li>Retirar el filtre de la cafetera.</li><li>Col·locar café mòlt en el filtre.</li><li>Col·locar el filtre amb café en la cafetera.</li><li>Encendre la cafetera i esperar que l&#39;aigua calenta passe pel café mòlt.</li><li>Abocar el café preparat en una tassa.</li></ol><p>Aquest exemple mostra com un algoritme guia pas a pas per a obtindre un resultat específic, en aquest cas, una tassa de café llesta per a gaudir.</p></blockquote><h2 id="_3-3-la-connexio-amb-el-maquinari" tabindex="-1">3.3 La connexió amb el maquinari <a class="header-anchor" href="#_3-3-la-connexio-amb-el-maquinari" aria-label="Permalink to &quot;3.3 La connexió amb el maquinari&quot;">​</a></h2><p>Recorda el que vam veure en la secció anterior sobre com funcionen els ordinadors:</p><ul><li>El <strong>processador (CPU)</strong> executa les instruccions del programa</li><li>La <strong>memòria RAM</strong> guarda temporalment les dades mentre el programa s&#39;executa</li><li>El <strong>disc dur</strong> guarda el programa quan no s&#39;està utilitzant</li></ul><p>És com si el programa fos la recepta del café, la CPU la cafetera que fa el treball, la RAM la taula on posem temporalment els ingredients mentre fem el café, i el disc dur l&#39;armari on guardem la recepta quan no estem fent café.</p><div class="tip custom-block"><p class="custom-block-title">Conceptes clau per recordar</p><ul><li><strong>Descomposició</strong>: Dividir problemes en parts més xicotetes.</li><li><strong>Patrons</strong>: Reutilitzar solucions per a problemes similars.</li><li><strong>Abstracció</strong>: Ignorar detalls irrellevants per a centrar-se en el que importa.</li><li><strong>Algoritme</strong>: Instruccions pas a pas per a resoldre un problema.</li><li><strong>Pensament computacional</strong>: Aplicar aquests conceptes per a resoldre problemes de manera eficient.</li><li><strong>Programació</strong>: Utilitzar el pensament computacional per a escriure codi que l&#39;ordinador entenga.</li></ul></div>',29)]))}const g=e(i,[["render",o]]);export{d as __pageData,g as default};
